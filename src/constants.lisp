(in-package :chess)

(defconstant KING #\K)
(defconstant QUEEN #\Q)
(defconstant ROOK #\R)
(defconstant KNIGHT #\N)
(defconstant BISHOP #\B)
(defconstant PAWN #\P)

(defconstant WHITE-KING #\K)
(defconstant WHITE-QUEEN #\Q)
(defconstant WHITE-ROOK #\R)
(defconstant WHITE-KNIGHT #\N)
(defconstant WHITE-BISHOP #\B)
(defconstant WHITE-PAWN #\P)
(defconstant WHITE-PIECES (list WHITE-KING WHITE-QUEEN WHITE-ROOK WHITE-KNIGHT WHITE-BISHOP WHITE-PAWN))

(defconstant BLACK-KING #\k)
(defconstant BLACK-QUEEN #\q)
(defconstant BLACK-ROOK #\r)
(defconstant BLACK-KNIGHT #\n)
(defconstant BLACK-BISHOP #\b)
(defconstant BLACK-PAWN #\p)
(defconstant BLACK-PIECES (list BLACK-KING BLACK-QUEEN BLACK-ROOK BLACK-KNIGHT BLACK-BISHOP BLACK-PAWN))

(defconstant EMPTY-SQUARE #\.)

(defconstant WHITE 'white)
(defconstant BLACK 'black)

(defconstant NORTH -10)
(defconstant EAST 1)
(defconstant SOUTH 10)
(defconstant WEST -1)

(defconstant PIECE-DIRECTIONS
  (let* ((knight-directions (list (+ NORTH NORTH EAST)
                                  (+ NORTH NORTH WEST)
                                  (+ NORTH EAST EAST)
                                  (+ NORTH WEST WEST)
                                  (+ SOUTH SOUTH EAST)
                                  (+ SOUTH SOUTH WEST)
                                  (+ SOUTH EAST EAST)
                                  (+ SOUTH WEST WEST)))
         (rook-directions (list NORTH EAST SOUTH WEST))
         (bishop-directions (list (+ NORTH EAST) (+ NORTH WEST) (+ SOUTH EAST) (+ SOUTH WEST)))
         (queen-directions (concatenate 'list rook-directions bishop-directions))
         (king-directions queen-directions))
    (fset:map
     (KING king-directions)
     (QUEEN queen-directions)
     (ROOK rook-directions)
     (BISHOP bishop-directions)
     (KNIGHT knight-directions)
     (WHITE-PAWN (list NORTH (+ NORTH NORTH) (+ NORTH EAST) (+ NORTH WEST)))
     (BLACK-PAWN (list SOUTH (+ SOUTH SOUTH) (+ SOUTH EAST) (+ SOUTH WEST))))))
